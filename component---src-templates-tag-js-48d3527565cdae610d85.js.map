{"version":3,"sources":["webpack:///./src/templates/tag.js"],"names":["Tag","data","location","pageContext","tagName","tag","name","tagDescription","description","posts","allMarkdownRemark","edges","filter","node","excerpt","type","image","feature_image","className","map","key","id","post","pageQuery"],"mappings":"uMA4DeA,UA/CH,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YAGrBC,EAAUD,EAAYE,IAAIC,KAC1BC,EAAiBJ,EAAYE,IAAIG,YAEjCC,EAAQR,EAAKS,kBAAkBC,MAAMC,QAAO,qBAAGC,KAAgBC,WAErE,OACI,oCACI,kBAAC,IAAD,CACIb,KAAMA,EACNC,SAAUA,EACVa,KAAK,MACLT,KAAMH,EAAYE,IAAIC,KACtBE,YAAaL,EAAYE,IAAIG,YAC7BQ,MAAOb,EAAYE,IAAIY,gBAE3B,kBAAC,IAAD,KACI,yBAAKC,UAAU,aACX,4BAAQA,UAAU,cACd,4BAAKd,GACJG,EAAiB,2BAAIA,GAAsB,MAEhD,6BAASW,UAAU,aACdT,EAAMU,KAAI,gBAAGN,EAAH,EAAGA,KAAH,OAEP,kBAAC,IAAD,CAAUO,IAAKP,EAAKQ,GAAIC,KAAMT,QAGtC,kBAAC,IAAD,CAAYV,YAAaA,QAsCtC,IAAMoB,EAAS","file":"component---src-templates-tag-js-48d3527565cdae610d85.js","sourcesContent":["import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { graphql } from \"gatsby\"\r\n\r\nimport { Layout, PostCard, Pagination } from \"../components/common\"\r\nimport { MetaData } from \"../components/common/meta\"\r\n\r\n/**\r\n * Tag page (/tag/:slug)\r\n *\r\n * Loads all posts for the requested tag incl. pagination.\r\n *\r\n */\r\nconst Tag = ({ data, location, pageContext }) => {\r\n    // console.log(`TAGS -> `, data, pageContext)\r\n\r\n    const tagName = pageContext.tag.name\r\n    const tagDescription = pageContext.tag.description\r\n    \r\n    const posts = data.allMarkdownRemark.edges.filter(({ node }) => node.excerpt)\r\n\r\n    return (\r\n        <>\r\n            <MetaData\r\n                data={data}\r\n                location={location}\r\n                type=\"tag\"\r\n                name={pageContext.tag.name}\r\n                description={pageContext.tag.description}\r\n                image={pageContext.tag.feature_image}\r\n            />\r\n            <Layout>\r\n                <div className=\"container\">\r\n                    <header className=\"tag-header\">\r\n                        <h1>{tagName}</h1>\r\n                        {tagDescription ? <p>{tagDescription}</p> : null}\r\n                    </header>\r\n                    <section className=\"post-feed\">\r\n                        {posts.map(({ node }) => (\r\n                            // The tag below includes the markup for each post - components/common/PostCard.js\r\n                            <PostCard key={node.id} post={node} />\r\n                        ))}\r\n                    </section>\r\n                    <Pagination pageContext={pageContext} />\r\n                </div>\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\nTag.propTypes = {\r\n    data: PropTypes.shape({\r\n        allMarkdownRemark: PropTypes.object,\r\n    }).isRequired,\r\n    location: PropTypes.shape({\r\n        pathname: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n    pageContext: PropTypes.object,\r\n}\r\n\r\nexport default Tag\r\n\r\n// export const pageQuery = graphql`\r\n//     query GhostTagQuery($slug: String!, $limit: Int!, $skip: Int!) {\r\n//         ghostTag(slug: { eq: $slug }) {\r\n//             ...GhostTagFields\r\n//         }\r\n//         allGhostPost(\r\n//             sort: { order: DESC, fields: [published_at] },\r\n//             filter: {tags: {elemMatch: {slug: {eq: $slug}}}},\r\n//             limit: $limit,\r\n//             skip: $skip\r\n//         ) {\r\n//             edges {\r\n//                 node {\r\n//                 ...GhostPostFields\r\n//                 }\r\n//             }\r\n//         }\r\n//     }\r\n// `\r\nexport const pageQuery = graphql`\r\n    query MarkdownTagQuery($slug: String, $limit: Int!, $skip: Int!) {\r\n        allMarkdownRemark(\r\n            limit: $limit\r\n            sort: { fields: [frontmatter___published_at], order: DESC }\r\n            filter: {\r\n                frontmatter: {\r\n                    tags: { elemMatch: { frontmatter: { slug: { eq: $slug } } } }\r\n                    draft: { ne: true }\r\n                }\r\n            }\r\n            skip: $skip\r\n        ) {\r\n            totalCount\r\n            edges {\r\n                node {\r\n                    id\r\n                    html\r\n                    frontmatter {\r\n                        title\r\n                        slug\r\n                        tags {\r\n                            frontmatter {\r\n                                name\r\n                                slug\r\n                            }\r\n                        }\r\n                        feature_image {\r\n                            childImageSharp {\r\n                                fluid(maxWidth: 400, maxHeight: 250) {\r\n                                    ...GatsbyImageSharpFluid\r\n                                }\r\n                            }\r\n                          }\r\n                        author {\r\n                            frontmatter {\r\n                                name\r\n                                profile_image\r\n                            }\r\n                        }\r\n                    }\r\n                    excerpt\r\n                }\r\n            }\r\n        }\r\n    }\r\n`\r\n"],"sourceRoot":""}