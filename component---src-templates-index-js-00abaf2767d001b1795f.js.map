{"version":3,"sources":["webpack:///./src/templates/index.js"],"names":["Index","data","location","pageContext","console","log","posts","allMarkdownRemark","edges","isHome","className","map","node","key","id","post","pageQuery"],"mappings":"2FAAA,kGA+CeA,UAhCD,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YAC7BC,QAAQC,IAAR,QAAqBJ,GACrB,IAAMK,EAAQL,EAAKM,kBAAkBC,MAErC,OACI,oCACI,kBAAC,IAAD,CAAUN,SAAUA,IACpB,kBAAC,IAAD,CAAQO,QAAQ,GACZ,yBAAKC,UAAU,aACX,6BAASA,UAAU,aACdJ,EAAMK,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAEP,kBAAC,IAAD,CAAUC,IAAKD,EAAKE,GAAIC,KAAMH,QAGtC,kBAAC,IAAD,CAAYT,YAAaA,QAsCtC,IAAMa,EAAS","file":"component---src-templates-index-js-00abaf2767d001b1795f.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { graphql } from 'gatsby'\r\n\r\nimport { Layout, PostCard, Pagination } from '../components/common'\r\nimport { MetaData } from '../components/common/meta'\r\n\r\n/**\r\n* Main index page (home page)\r\n*\r\n* Loads all posts from Ghost and uses pagination to navigate through them.\r\n* The number of posts that should appear per page can be setup\r\n* in /utils/siteConfig.js under `postsPerPage`.\r\n*\r\n*/\r\nconst Index = ({ data, location, pageContext }) => {\r\n    console.log(`Index`, data)\r\n    const posts = data.allMarkdownRemark.edges\r\n\r\n    return (\r\n        <>\r\n            <MetaData location={location} />\r\n            <Layout isHome={true}>\r\n                <div className=\"container\">\r\n                    <section className=\"post-feed\">\r\n                        {posts.map(({ node }) => (\r\n                            // The tag below includes the markup for each post - components/common/PostCard.js\r\n                            <PostCard key={node.id} post={node} />\r\n                        ))}\r\n                    </section>\r\n                    <Pagination pageContext={pageContext} />\r\n                </div>\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\nIndex.propTypes = {\r\n    data: PropTypes.shape({\r\n        allMarkdownRemark: PropTypes.object.isRequired,\r\n    }).isRequired,\r\n    location: PropTypes.shape({\r\n        pathname: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n    pageContext: PropTypes.object,\r\n}\r\n\r\nexport default Index\r\n\r\n// This page query loads all posts sorted descending by published date\r\n// The `limit` and `skip` values are used for pagination\r\n\r\n// export const pageQuery = graphql`\r\n//   query GhostPostQuery($limit: Int!, $skip: Int!) {\r\n//     allGhostPost(\r\n//         sort: { order: DESC, fields: [published_at] },\r\n//         limit: $limit,\r\n//         skip: $skip\r\n//     ) {\r\n//       edges {\r\n//         node {\r\n//           ...GhostPostFields\r\n//         }\r\n//       }\r\n//     }\r\n//   }\r\n// `\r\n\r\nexport const pageQuery = graphql`\r\n    query MarkdownPostQuery($limit: Int!, $skip: Int!) {\r\n        allMarkdownRemark(\r\n            sort: { order: DESC, fields: [frontmatter___published_at] }\r\n            limit: $limit\r\n            skip: $skip\r\n            filter: {\r\n                frontmatter: { draft: { ne: true } }\r\n                fileAbsolutePath: { regex: \"/posts/\" }\r\n            }\r\n        ) {\r\n            edges {\r\n              node {\r\n                id\r\n                html\r\n                frontmatter {\r\n                  title\r\n                  date\r\n                  draft\r\n                  feature_image {\r\n                    childImageSharp {\r\n                        fluid(maxWidth: 400, maxHeight: 250) {\r\n                            ...GatsbyImageSharpFluid\r\n                        }\r\n                    }\r\n                  }\r\n                  featured\r\n                  published_at\r\n                  weight\r\n                  page\r\n                  created_at\r\n                  slug\r\n                  tag_id\r\n                  name\r\n                  description\r\n                  meta_description\r\n                  meta_title\r\n                  visibility\r\n                  author {\r\n                      frontmatter {\r\n                          name\r\n                          profile_image\r\n                          description\r\n                          slug\r\n                      }\r\n                  }\r\n                  tags {\r\n                      id\r\n                      frontmatter {\r\n                          name\r\n                      }\r\n                  }\r\n                }\r\n                excerpt\r\n              }\r\n            }\r\n          }\r\n    }\r\n`\r\n"],"sourceRoot":""}