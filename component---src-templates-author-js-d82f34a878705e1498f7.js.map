{"version":3,"sources":["webpack://gatsby-theme-ghost/./src/templates/author.js"],"names":["data","location","pageContext","author","posts","allMarkdownRemark","edges","twitterUrl","twitter","replace","facebookUrl","facebook","type","className","name","bio","website","href","target","rel","profile_image","src","alt","map","node","key","id","post"],"mappings":"qKAkEA,UArDe,SAAC,GAAqC,IAAnCA,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YACxBC,EAASD,EAAYC,OACrBC,EAAQJ,EAAKK,kBAAkBC,MAC/BC,EAAaJ,EAAOK,QAAP,uBAAwCL,EAAOK,QAAQC,QAAQ,KAAvB,IAAqC,KAC1FC,EAAcP,EAAOQ,SAAP,4BAA8CR,EAAOQ,SAASF,QAAQ,MAAxB,IAAuC,KAEzG,OACI,gCACI,gBAAC,IAAD,eACIT,KAAMG,EACNF,SAAUA,EACVW,KAAK,UACDT,IAER,gBAAC,KAAD,KACI,uBAAKU,UAAU,aACX,0BAAQA,UAAU,iBACd,uBAAKA,UAAU,yBACX,0BAAKV,EAAOW,MACXX,EAAOY,KAAO,yBAAIZ,EAAOY,KAC1B,uBAAKF,UAAU,sBACVV,EAAOa,SAAW,qBAAGH,UAAU,qBAAqBI,KAAMd,EAAOa,QAASE,OAAO,SAASC,IAAI,uBAA5E,WAClBZ,GAAc,qBAAGM,UAAU,qBAAqBI,KAAMV,EAAYW,OAAO,SAASC,IAAI,uBAAxE,WACdT,GAAe,qBAAGG,UAAU,qBAAqBI,KAAMP,EAAaQ,OAAO,SAASC,IAAI,uBAAzE,cAGxB,uBAAKN,UAAU,uBACVV,EAAOiB,eAAiB,uBAAKC,IAAKlB,EAAOiB,cAAeE,IAAKnB,EAAOW,SAG7E,2BAASD,UAAU,aACdT,EAAMmB,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAEP,gBAAC,KAAD,CAAUC,IAAKD,EAAKE,GAAIC,KAAMH,QAGtC,gBAAC,KAAD,CAAYtB,YAAaA","file":"component---src-templates-author-js-d82f34a878705e1498f7.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { graphql } from 'gatsby'\r\n\r\nimport { Layout, PostCard, Pagination } from '../components/common'\r\nimport { MetaData } from '../components/common/meta'\r\n\r\n/**\r\n* Author page (/author/:slug)\r\n*\r\n* Loads all posts for the requested author incl. pagination.\r\n*\r\n*/\r\nconst Author = ({ data, location, pageContext }) => {\r\n    const author = pageContext.author\r\n    const posts = data.allMarkdownRemark.edges\r\n    const twitterUrl = author.twitter ? `https://twitter.com/${author.twitter.replace(/^@/, ``)}` : null\r\n    const facebookUrl = author.facebook ? `https://www.facebook.com/${author.facebook.replace(/^\\//, ``)}` : null\r\n    // console.log(`Authors -> `, author)\r\n    return (\r\n        <>\r\n            <MetaData\r\n                data={author}\r\n                location={location}\r\n                type=\"author\"\r\n                {...author}\r\n            />\r\n            <Layout>\r\n                <div className=\"container\">\r\n                    <header className=\"author-header\">\r\n                        <div className=\"author-header-content\">\r\n                            <h1>{author.name}</h1>\r\n                            {author.bio && <p>{author.bio}</p>}\r\n                            <div className=\"author-header-meta\">\r\n                                {author.website && <a className=\"author-header-item\" href={author.website} target=\"_blank\" rel=\"noopener noreferrer\">Website</a>}\r\n                                {twitterUrl && <a className=\"author-header-item\" href={twitterUrl} target=\"_blank\" rel=\"noopener noreferrer\">Twitter</a>}\r\n                                {facebookUrl && <a className=\"author-header-item\" href={facebookUrl} target=\"_blank\" rel=\"noopener noreferrer\">Facebook</a>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"author-header-image\">\r\n                            {author.profile_image && <img src={author.profile_image} alt={author.name} />}\r\n                        </div>\r\n                    </header>\r\n                    <section className=\"post-feed\">\r\n                        {posts.map(({ node }) => (\r\n                            // The tag below includes the markup for each post - components/common/PostCard.js\r\n                            <PostCard key={node.id} post={node} />\r\n                        ))}\r\n                    </section>\r\n                    <Pagination pageContext={pageContext} />\r\n                </div>\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\nAuthor.propTypes = {\r\n    data: PropTypes.shape({\r\n        allMarkdownRemark: PropTypes.object.isRequired,\r\n    }).isRequired,\r\n    location: PropTypes.shape({\r\n        pathname: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n    pageContext: PropTypes.object,\r\n}\r\n\r\nexport default Author\r\n\r\nexport const pageQuery = graphql`\r\n    query MarkDownAuthorQuery($slug: String!, $limit: Int!, $skip: Int!) {\r\n        allMarkdownRemark(\r\n            filter: {\r\n                frontmatter: {\r\n                    author: {frontmatter: {slug: {eq: $slug}}}\r\n                    draft: { ne: true }\r\n                }\r\n            }\r\n            skip: $skip, \r\n            limit: $limit\r\n        ){\r\n            totalCount\r\n            edges {\r\n                node {\r\n                    id\r\n                    html\r\n                    frontmatter {\r\n                        title\r\n                        slug\r\n                        tags {\r\n                            frontmatter {\r\n                                name\r\n                            }\r\n                        }\r\n                        feature_image {\r\n                            childImageSharp {\r\n                                fluid(maxWidth: 400, maxHeight: 250) {\r\n                                    ...GatsbyImageSharpFluid\r\n                                }\r\n                              }\r\n                        }\r\n                        author {\r\n                            frontmatter {\r\n                                name\r\n                                profile_image\r\n                                description\r\n                            }\r\n                        }\r\n                    }\r\n                    excerpt\r\n                }\r\n            }\r\n        }\r\n    }\r\n`\r\n"],"sourceRoot":""}